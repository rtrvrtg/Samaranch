<%= form_for(@session, :html => {:class => "form-horizontal"}) do |f| %>
  <% if @session.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(@session.errors.count, "error") %> prohibited this session from being saved:</h2>

      <ul>
      <% @session.errors.full_messages.each do |msg| %>
        <li><%= msg %></li>
      <% end %>
      </ul>
    </div>
  <% end %>

  <%= bootstrap_field f, :title do %>
    <%= f.text_field :title %>
  <% end %>
  <%= bootstrap_field f, :start do %>
    <%= f.text_field :start, :class => 'datepicker' %>
    <a href="#" class="copy-time" data-source="session_start" data-destination="session_end">Copy Start to End</a>
  <% end %>
  <%= bootstrap_field f, :end do %>
    <%= f.text_field :end, :class => 'datepicker' %>
    <a href="#" class="adjust-time" data-mins="30" data-destination="session_end">+30 minutes</a>
    <a href="#" class="adjust-time" data-mins="60" data-destination="session_end">+1 hour</a>
    <a href="#" class="adjust-time" data-mins="90" data-destination="session_end">+1 hour 30 minutes</a>
    <a href="#" class="adjust-time" data-mins="120" data-destination="session_end">+2 hour</a>
  <% end %>
  <%= bootstrap_field f, :location_id do %>
    <%= collection_select(:session, 
                          :location_id, 
                          Location.all, 
                          :id, 
                          :name, 
                          :prompt => 'Select a location') %>
  <% end %>
  <%= bootstrap_field f, :session_type_id do %>
    <%= collection_select(:session, 
                          :session_type_id, 
                          SessionType.all, 
                          :id, 
                          :title, 
                          :prompt => 'Select a session type') %>
  <% end %>
  <%= bootstrap_field f, :description do %>
    <%= f.text_area :description %>
  <% end %>
  
  <%= bootstrap_field f, :guests do %>
    <%= collection_select(:session, 
                          :guest_ids, 
                          Guest.all, 
                          :id, 
                          :name, 
                          {}, {
                          	:multiple => 'true'
                          }) %>
  <% end %>
  
  <div class="form-actions">
    <%= f.submit :class => 'btn btn-primary' %>
  </div>
<% end %>

<script>

$(function() {
  $(".datepicker").datetimepicker({
  	dateFormat: 'yy-mm-dd', 
  	timeFormat: 'hh:mm:ss', 
  	ampm: false
  });
  
  $('.copy-time').click(function(e){
    e.preventDefault();
    var val = $('#' + $(this).attr('data-source')).val();
    $('#' + $(this).attr('data-destination')).val(val);
  });
  
  var dateAdjust = function(source) {
    
    var d = new Date(Date.parse(source));
    
    var makeArrayOf = function(value, length) {
      var arr = [], i = length;
      while (i--) {
        arr[i] = value;
      }
      return arr;
    }
    
    var pad = function(val, l, pad) {
      if (!pad) pad = '0';
      val = val + '';
      if (val.length >= l) return val;
      val = makeArrayOf(pad, l - val.length).join('') + val;
      return val;
    };
    
    var addMins = function(mins) {
      mins = +(mins);
      d = new Date(d.getTime() + (mins * 60000));
    };
    
    var render = function() {
      return [
         d.getFullYear(), 
        pad((d.getMonth() + 1), 2), 
        pad(d.getDate(), 2)
      ].join('-') + 
      ' ' + 
      [
        pad(d.getHours(), 2), 
        pad(d.getMinutes(), 2), 
        pad(d.getSeconds(), 2)
      ].join(':');
    };
    
    var pub = {
      addMins: addMins,
      render: render
    };
    
    return pub;
  };
  
  $('.adjust-time').click(function(e){
    e.preventDefault();
    var d = $('#' + $(this).attr('data-destination'));
    var da = new dateAdjust(d.val());
    da.addMins($(this).attr('data-mins'));
    d.val(da.render());
  });
});

</script>
